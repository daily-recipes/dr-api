kind: Deployment
apiVersion: apps/v1
metadata:
  name: recipes-api
  namespace: daily-recipes
  labels:
    k8s-app: recipes-api
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: recipes-api
  template:
    metadata:
      name: recipes-api
      labels:
        k8s-app: recipes-api
    spec:
      containers:
        - name: recipes-api
          image: 'pc:5000/recipes-service:0.8'
          #image: 'elio2004/recipes-service:0.8'
          ports:
          - containerPort: 8081
#          resources:
#              limits:
#                memory: 1024Mi
#                cpu: "1"
          securityContext:
            privileged: false
          imagePullPolicy: Always
          env:
          - name: server.port
            value: "8081"
          - name: org.neo4j.driver.uri
            valueFrom:
              secretKeyRef:
                name: neo4j-access
                key: org.neo4j.driver.uri
          - name: org.neo4j.driver.authentication.username
            valueFrom:
              secretKeyRef:
                name: neo4j-access
                key: org.neo4j.driver.authentication.username
          - name: org.neo4j.driver.authentication.password
            valueFrom:
              secretKeyRef:
                name: neo4j-access
                key: org.neo4j.driver.authentication.password
          - name: security.oauth2.resource.id
            valueFrom:
              secretKeyRef:
                name: svc-auth-config
                key: security.oauth2.resource.id
          livenessProbe:
            httpGet:
              path: /manage/health/liveness
              port: 8081
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /manage/health/readiness
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
      initContainers:
        - name: init-backend
          image: busybox
          command: ['sh', '-c', 'until nslookup neo4j-bolt; do echo waiting for neo4j-bolt; sleep 2; done;']
      restartPolicy: Always